version: '3.8'

services:
  db:
    image: postgres:15
    container_name: db
    restart: always
    environment:
      POSTGRES_DB: daeseda
      POSTGRES_USER: daeseda
      POSTGRES_PASSWORD: daeseda2025!
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U daeseda"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7
    container_name: redis_cache
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data

  app:
    build: .
    container_name: spring_app
    ports:
      - "8080:8080"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://db:5432/daeseda
      SPRING_DATASOURCE_USERNAME: daeseda
      SPRING_DATASOURCE_PASSWORD: daeseda2025!

  jenkins:
    image: jenkins/jenkins:lts
    container_name: jenkins_server
    restart: always
    user: root
    ports:
      - "8081:8080"
      - "50000:50000"
    volumes:
      - jenkins_home:/var/jenkins_home
      - /var/run/docker.sock:/var/run/docker.sock  # Jenkins가 Docker 컨트롤 가능하도록 설정

volumes:
  postgres_data:
  redis_data:
  jenkins_home: